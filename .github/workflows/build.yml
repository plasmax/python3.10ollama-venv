name: Create Python Virtual Environment

on:
  workflow_dispatch:  # Allow manual triggering

jobs:
  create-venv:
    runs-on: ubuntu-20.04  # Specifically use Ubuntu 20.04 which has Python 3.9.10
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python 3.9.10
      uses: actions/setup-python@v4
      with:
        python-version: "3.9.10"
    
    - name: Create and populate virtual environment
      run: |
        # Create venv without pip to ensure we control the pip version
        python -m venv venv --without-pip
        source venv/bin/activate
        
        # Install pip manually to have more control
        curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py
        python get-pip.py --force-reinstall
        
        # Install packages with specific pip version
        python -m pip install --upgrade pip==23.0.1  # Using a stable pip version
        pip install wheel  # Ensure wheel is available
        pip install ollama langchain chromadb
        
        # Record Python and pip versions for debugging
        python --version
        pip --version
        deactivate
    
    - name: Create site-packages archive
      run: |
        cd venv/lib/python3.9/site-packages
        tar czf ../../../../site-packages.tar.gz ./*
    
    - name: Upload virtual environment artifact
      uses: actions/upload-artifact@v3
      with:
        name: python-site-packages
        path: site-packages.tar.gz
        if-no-files-found: error

    - name: List installed packages
      run: |
        source venv/bin/activate
        pip freeze > requirements.txt
        deactivate
        cat requirements.txt

    - name: Upload requirements.txt
      uses: actions/upload-artifact@v3
      with:
        name: requirements
        path: requirements.txt
        if-no-files-found: error
